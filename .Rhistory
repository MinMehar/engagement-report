labs(title = "Average Daily PM2.5 Concentration January to March of 2021 and 2022",
x = 'Date',
y = 'Avg. PM2.5 Conc. (ug/m3)',
color = "Year",
caption = "Time series data of daily average PM2.5
concentrations in Salt Lake County in winter of 2021 and 2022") +
theme(legend.position = "bottom", plot.title=element_text(hjust=0.5)) +
scale_color_manual(values = c("#9970de", "#37b9bf"))
ggsave("output/time_series_plot.png", plot = last_plot())
library(ggplot2)
#putting each year into separate data frames to graph them on top of each other
daily_21 <- subset(pm_daily_mean, year == 2021)
daily_22 <- subset(pm_daily_mean, year == 2022)
#aligning 2022 data with 2021 by creating a 'fake date' so the two lines for each year overlay nicely on a graph where the x-axis is just day/month
daily_22$fake_date <- daily_21$date
#making a time series graph
ggplot() +
geom_line(data=daily_21, aes(x=date, y=avg_conc, group=year, color=year)) +
geom_line(data=daily_22, aes(x=fake_date, y=avg_conc, group=year, color=year)) +
geom_point() +
scale_x_date(date_breaks = "10 day", date_labels = "%m/%d") +
labs(title = "Average Daily PM2.5 Concentration January to March of 2021 and 2022",
x = 'Date',
y = 'Avg. PM2.5 Conc. (ug/m3)',
color = "Year",
caption = "Time series data of daily average PM2.5
concentrations in Salt Lake County in winter of 2021 and 2022") +
theme(legend.position = "bottom", plot.title=element_text(hjust=0.5)) +
scale_color_manual(values = c("#9970de", "#37b9bf"))
ggsave("output/time_series_plot", plot = last_plot())
library(ggplot2)
#putting each year into separate data frames to graph them on top of each other
daily_21 <- subset(pm_daily_mean, year == 2021)
daily_22 <- subset(pm_daily_mean, year == 2022)
#aligning 2022 data with 2021 by creating a 'fake date' so the two lines for each year overlay nicely on a graph where the x-axis is just day/month
daily_22$fake_date <- daily_21$date
#making a time series graph
ggplot() +
geom_line(data=daily_21, aes(x=date, y=avg_conc, group=year, color=year)) +
geom_line(data=daily_22, aes(x=fake_date, y=avg_conc, group=year, color=year)) +
geom_point() +
scale_x_date(date_breaks = "10 day", date_labels = "%m/%d") +
labs(title = "Average Daily PM2.5 Concentration January to March of 2021 and 2022",
x = 'Date',
y = 'Avg. PM2.5 Conc. (ug/m3)',
color = "Year",
caption = "Time series data of daily average PM2.5
concentrations in Salt Lake County in winter of 2021 and 2022") +
theme(legend.position = "bottom", plot.title=element_text(hjust=0.5)) +
scale_color_manual(values = c("#9970de", "#37b9bf"))
ggsave("output/time_series_plot.svg", plot = last_plot())
final_table <- readRDS(
file = here::here("output/final_table.html")
)
final_table <- readhtml(
file = here::here("output/final_table.html")
)
final_table <- read_html(
file = here::here("output/final_table.html")
)
here::i_am("code/01_make_summary_table.R")
library(knitr)
library(kableExtra)
## setting up data to calculate correctly for table
# converting dates from characters to dates
pm_daily_mean$date <- as.Date(c(pm_daily_mean$date), "%m/%d/%Y")
# creating a column for month and year
pm_daily_mean$month <- months(pm_daily_mean$date)
pm_daily_mean$year <- format(pm_daily_mean$date, format="%Y")
# aggregating daily values by month and year
monthly_mean <- aggregate(avg_conc~month+year, pm_daily_mean, mean)
## making the table
knitr::kable(monthly_mean,
col.names = c("Month", "Year", "Average PM2.5 Concentration [ug/m3]"),
align = "llc",
caption = "This table displays the average concentration of PM2.5 by month in winter 2021 and 2022, averaged across all EPA monitoring stations in Salt Lake County.",
digits = 2
) %>%
kable_material(c("striped", "hover")) %>%
save_kable("output/final_table.Rds")
table_one <- readRDS(
file = here::here("output/table_one.rds")
)
final_table <- readRDS(
file = here::here("output/final_table.Rds")
)
final_table <- readRDS(
file = here::here("output/final_table")
)
final_table <- readRDS(
file = here::here("output/final_table.html")
)
final_table <- read(
file = here::here("output/final_table.html")
)
final_table <- read.html(
file = here::here("output/final_table.html")
)
cat output/final_table.html
cat "output/final_table.html"
cat final_table.html
library(xml2)
rawHTML <- read_html(x = "output/final_table.html")
library(xml2)
rawHTML <- read_html(x = "output/final_table.html")
rawHTML
here::i_am("code/01_make_summary_table.R")
library(knitr)
library(kableExtra)
## setting up data to calculate correctly for table
# converting dates from characters to dates
pm_daily_mean$date <- as.Date(c(pm_daily_mean$date), "%m/%d/%Y")
# creating a column for month and year
pm_daily_mean$month <- months(pm_daily_mean$date)
pm_daily_mean$year <- format(pm_daily_mean$date, format="%Y")
# aggregating daily values by month and year
monthly_mean <- aggregate(avg_conc~month+year, pm_daily_mean, mean)
## making the table
knitr::kable(monthly_mean,
col.names = c("Month", "Year", "Average PM2.5 Concentration [ug/m3]"),
align = "llc",
caption = "This table displays the average concentration of PM2.5 by month in winter 2021 and 2022, averaged across all EPA monitoring stations in Salt Lake County.",
digits = 2
) %>%
kable_material(c("striped", "hover")) %>%
save_kable("output/final_table.svg")
final_table.html
output/final_table.html
"output/final_table.html"
library(htmltools)
htmltools::includeHTML("output/final_table.html")
time_series_plot.svg
output/time_series_plot.svg
"output/time_series_plot.svg"
![](time_series_plot.svg){width=25px}
library(ggplot2)
#putting each year into separate data frames to graph them on top of each other
daily_21 <- subset(pm_daily_mean, year == 2021)
daily_22 <- subset(pm_daily_mean, year == 2022)
#aligning 2022 data with 2021 by creating a 'fake date' so the two lines for each year overlay nicely on a graph where the x-axis is just day/month
daily_22$fake_date <- daily_21$date
#making a time series graph
ggplot() +
geom_line(data=daily_21, aes(x=date, y=avg_conc, group=year, color=year)) +
geom_line(data=daily_22, aes(x=fake_date, y=avg_conc, group=year, color=year)) +
geom_point() +
scale_x_date(date_breaks = "10 day", date_labels = "%m/%d") +
labs(title = "Average Daily PM2.5 Concentration January to March of 2021 and 2022",
x = 'Date',
y = 'Avg. PM2.5 Conc. (ug/m3)',
color = "Year",
caption = "Time series data of daily average PM2.5
concentrations in Salt Lake County in winter of 2021 and 2022") +
theme(legend.position = "bottom", plot.title=element_text(hjust=0.5)) +
scale_color_manual(values = c("#9970de", "#37b9bf"))
ggsave("output/time_series_plot.pdf", plot = last_plot())
knitr::include_graphics("output/time_series_plot.pdf")
knitr::include_graphics("output/time_series_plot.pdf")
library(knitr)
knitr::include_graphics("output/time_series_plot.pdf")
![Time Series Graph](output/time_series_plot.pdf){width=500px}
!["Time Series Graph"](output/time_series_plot.pdf){width=500px}
!(output/time_series_plot.pdf){width=500px}
!("output/time_series_plot.pdf"){width=500px}
library(knitr)
knitr::include_graphics("output/time_series_plot.svg")
library(knitr)
knitr::include_graphics("output/time_series_plot.svg")
library(knitr)
knitr::include_graphics("output/time_series_plot.pdf")
library(knitr)
knitr::include_graphics("output/time_series_plot.svg")
library(knitr)
knitr::include_graphics("output/time_series_plot.svg")
#making a time series graph
ggplot() +
geom_line(data=daily_21, aes(x=date, y=avg_conc, group=year, color=year)) +
geom_line(data=daily_22, aes(x=fake_date, y=avg_conc, group=year, color=year)) +
geom_point() +
scale_x_date(date_breaks = "10 day", date_labels = "%m/%d") +
labs(title = "Average Daily PM2.5 Concentration January to March of 2021 and 2022",
x = 'Date',
y = 'Avg. PM2.5 Conc. (ug/m3)',
color = "Year",
caption = "Time series data of daily average PM2.5
concentrations in Salt Lake County in winter of 2021 and 2022") +
theme(legend.position = "bottom", plot.title=element_text(hjust=0.5)) +
scale_color_manual(values = c("#9970de", "#37b9bf"))
library(knitr)
knitr::include_graphics("output/time_series_plot.pdf")
library(ggplot2)
#putting each year into separate data frames to graph them on top of each other
daily_21 <- subset(pm_daily_mean, year == 2021)
daily_22 <- subset(pm_daily_mean, year == 2022)
#aligning 2022 data with 2021 by creating a 'fake date' so the two lines for each year overlay nicely on a graph where the x-axis is just day/month
daily_22$fake_date <- daily_21$date
#making a time series graph
ggplot() +
geom_line(data=daily_21, aes(x=date, y=avg_conc, group=year, color=year)) +
geom_line(data=daily_22, aes(x=fake_date, y=avg_conc, group=year, color=year)) +
geom_point() +
scale_x_date(date_breaks = "10 day", date_labels = "%m/%d") +
labs(title = "Average Daily PM2.5 Concentration January to March of 2021 and 2022",
x = 'Date',
y = 'Avg. PM2.5 Conc. (ug/m3)',
color = "Year",
caption = "Time series data of daily average PM2.5
concentrations in Salt Lake County in winter of 2021 and 2022") +
theme(legend.position = "bottom", plot.title=element_text(hjust=0.5)) +
scale_color_manual(values = c("#9970de", "#37b9bf"))
source("code/02_make_time_series")
setwd("C:/Users/rache/OneDrive - Emory University/Documents/Fall 2022/INFO 580 Data Science Toolkit/RStudio Projects/final-project")
source("code/02_make_time_series")
source("code/02_make_time_series")
source("code/02_make_time_series.R")
View(daily_22)
source("code/02_make_time_series.R")
source("code/02_make_time_series.R")
#making a time series graph
plot_object <- ggplot() +
geom_line(data=daily_21, aes(x=date, y=avg_conc, group=year, color=year)) +
geom_line(data=daily_22, aes(x=fake_date, y=avg_conc, group=year, color=year)) +
geom_point() +
scale_x_date(date_breaks = "10 day", date_labels = "%m/%d") +
labs(title = "Average Daily PM2.5 Concentration January to March of 2021 and 2022",
x = 'Date',
y = 'Avg. PM2.5 Conc. (ug/m3)',
color = "Year",
caption = "Time series data of daily average PM2.5
concentrations in Salt Lake County in winter of 2021 and 2022") +
theme(legend.position = "bottom", plot.title=element_text(hjust=0.5)) +
scale_color_manual(values = c("#9970de", "#37b9bf"))
View(plot_object)
plot_object
plot_object
rmarkdown::render(final_report.Rmd)
rmarkdown::render("final_report.Rmd"")
rmarkdown::render("final_report.Rmd)
rmarkdown::render("final_report.Rmd")
#making a time series graph
time_series_plot <- ggplot() +
geom_line(data=daily_21, aes(x=date, y=avg_conc, group=year, color=year)) +
geom_line(data=daily_22, aes(x=fake_date, y=avg_conc, group=year, color=year)) +
geom_point() +
scale_x_date(date_breaks = "10 day", date_labels = "%m/%d") +
labs(title = "Average Daily PM2.5 Concentration January to March of 2021 and 2022",
x = 'Date',
y = 'Avg. PM2.5 Conc. (ug/m3)',
color = "Year",
caption = "Time series data of daily average PM2.5
concentrations in Salt Lake County in winter of 2021 and 2022") +
theme(legend.position = "bottom", plot.title=element_text(hjust=0.5)) +
scale_color_manual(values = c("#9970de", "#37b9bf"))
time_series_plot
source(code/02_make_timer_series.R)
source("code/02_make_timer_series.R")
source("code/02_make_timer_series.R")
ggsave(time_series_plot.png, plot = last_plot())
#making a time series graph
time_series_plot <- ggplot() +
geom_line(data=daily_21, aes(x=date, y=avg_conc, group=year, color=year)) +
geom_line(data=daily_22, aes(x=fake_date, y=avg_conc, group=year, color=year)) +
geom_point() +
scale_x_date(date_breaks = "10 day", date_labels = "%m/%d") +
labs(title = "Average Daily PM2.5 Concentration January to March of 2021 and 2022",
x = 'Date',
y = 'Avg. PM2.5 Conc. (ug/m3)',
color = "Year",
caption = "Time series data of daily average PM2.5
concentrations in Salt Lake County in winter of 2021 and 2022") +
theme(legend.position = "bottom", plot.title=element_text(hjust=0.5)) +
scale_color_manual(values = c("#9970de", "#37b9bf")) + ggsave(time_series_plot.png, plot = last_plot())
scale_color_manual(values = c("#9970de", "#37b9bf")
ggsave(time_series_plot.png, plot = last_plot())
ggsave(time_series_plot.png, plot = last_plot())
ggsave("time_series_plot.png", plot = last_plot())
ggsave("output/time_series_plot.png", plot = last_plot())
ggsave("output/time_series_plot.jpeg", plot = last_plot())
#making a time series graph
ggplot() +
geom_line(data=daily_21, aes(x=date, y=avg_conc, group=year, color=year)) +
geom_line(data=daily_22, aes(x=fake_date, y=avg_conc, group=year, color=year)) +
geom_point() +
scale_x_date(date_breaks = "10 day", date_labels = "%m/%d") +
labs(title = "Average Daily PM2.5 Concentration January to March of 2021 and 2022",
x = 'Date',
y = 'Avg. PM2.5 Conc. (ug/m3)',
color = "Year",
caption = "Time series data of daily average PM2.5
concentrations in Salt Lake County in winter of 2021 and 2022") +
theme(legend.position = "bottom", plot.title=element_text(hjust=0.5)) +
scale_color_manual(values = c("#9970de", "#37b9bf"))
pm_daily_mean <- read.csv("data/agg_PM25_2021-22_daily_mean.csv")
## making the table
knitr::kable(monthly_mean,
col.names = c("Month", "Year", "Average PM2.5 Concentration [ug/m3]"),
align = "llc",
caption = "This table displays the average concentration of PM2.5 by month in winter 2021 and 2022, averaged across all EPA monitoring stations in Salt Lake County.",
digits = 2
) %>%
kable_material(c("striped", "hover")) %>%
save_kable("output/final_table.html")
here::i_am("code/01_make_summary_table.R")
library(knitr)
library(kableExtra)
## setting up data to calculate correctly for table
# converting dates from characters to dates
pm_daily_mean$date <- as.Date(c(pm_daily_mean$date), "%m/%d/%Y")
# creating a column for month and year
pm_daily_mean$month <- months(pm_daily_mean$date)
pm_daily_mean$year <- format(pm_daily_mean$date, format="%Y")
# aggregating daily values by month and year
monthly_mean <- aggregate(avg_conc~month+year, pm_daily_mean, mean)
## making the table
knitr::kable(monthly_mean,
col.names = c("Month", "Year", "Average PM2.5 Concentration [ug/m3]"),
align = "llc",
caption = "This table displays the average concentration of PM2.5 by month in winter 2021 and 2022, averaged across all EPA monitoring stations in Salt Lake County.",
digits = 2
) %>%
kable_material(c("striped", "hover")) %>%
save_kable("output/final_table.html")
library(ggplot2)
#putting each year into separate data frames to graph them on top of each other
daily_21 <- subset(pm_daily_mean, year == 2021)
daily_22 <- subset(pm_daily_mean, year == 2022)
#aligning 2022 data with 2021 by creating a 'fake date' so the two lines for each year overlay nicely on a graph where the x-axis is just day/month
daily_22$fake_date <- daily_21$date
#making a time series graph
ggplot() +
geom_line(data=daily_21, aes(x=date, y=avg_conc, group=year, color=year)) +
geom_line(data=daily_22, aes(x=fake_date, y=avg_conc, group=year, color=year)) +
geom_point() +
scale_x_date(date_breaks = "10 day", date_labels = "%m/%d") +
labs(title = "Average Daily PM2.5 Concentration January to March of 2021 and 2022",
x = 'Date',
y = 'Avg. PM2.5 Conc. (ug/m3)',
color = "Year",
caption = "Time series data of daily average PM2.5
concentrations in Salt Lake County in winter of 2021 and 2022") +
theme(legend.position = "bottom", plot.title=element_text(hjust=0.5)) +
scale_color_manual(values = c("#9970de", "#37b9bf"))
ggsave("output/time_series_plot.jpeg", plot = last_plot())
knitr::include_graphics("output/time_series_plot.png")
library(ggplot2)
#putting each year into separate data frames to graph them on top of each other
daily_21 <- subset(pm_daily_mean, year == 2021)
daily_22 <- subset(pm_daily_mean, year == 2022)
#aligning 2022 data with 2021 by creating a 'fake date' so the two lines for each year overlay nicely on a graph where the x-axis is just day/month
daily_22$fake_date <- daily_21$date
#making a time series graph
ggplot() +
geom_line(data=daily_21, aes(x=date, y=avg_conc, group=year, color=year)) +
geom_line(data=daily_22, aes(x=fake_date, y=avg_conc, group=year, color=year)) +
geom_point() +
scale_x_date(date_breaks = "10 day", date_labels = "%m/%d") +
labs(title = "Average Daily PM2.5 Concentration January to March of 2021 and 2022",
x = 'Date',
y = 'Avg. PM2.5 Conc. (ug/m3)',
color = "Year",
caption = "Time series data of daily average PM2.5
concentrations in Salt Lake County in winter of 2021 and 2022") +
theme(legend.position = "bottom", plot.title=element_text(hjust=0.5)) +
scale_color_manual(values = c("#9970de", "#37b9bf"))
ggsave("output/time_series_plot.jpeg", plot = last_plot())
library(ggplot2)
#putting each year into separate data frames to graph them on top of each other
daily_21 <- subset(pm_daily_mean, year == 2021)
daily_22 <- subset(pm_daily_mean, year == 2022)
#aligning 2022 data with 2021 by creating a 'fake date' so the two lines for each year overlay nicely on a graph where the x-axis is just day/month
daily_22$fake_date <- daily_21$date
#making a time series graph
ggplot() +
geom_line(data=daily_21, aes(x=date, y=avg_conc, group=year, color=year)) +
geom_line(data=daily_22, aes(x=fake_date, y=avg_conc, group=year, color=year)) +
geom_point() +
scale_x_date(date_breaks = "10 day", date_labels = "%m/%d") +
labs(title = "Average Daily PM2.5 Concentration January to March of 2021 and 2022",
x = 'Date',
y = 'Avg. PM2.5 Conc. (ug/m3)',
color = "Year",
caption = "Time series data of daily average PM2.5
concentrations in Salt Lake County in winter of 2021 and 2022") +
theme(legend.position = "bottom", plot.title=element_text(hjust=0.5)) +
scale_color_manual(values = c("#9970de", "#37b9bf"))
ggsave("output/time_series_plot.png", plot = last_plot())
#making a time series graph
ggplot_object <- ggplot() +
geom_line(data=daily_21, aes(x=date, y=avg_conc, group=year, color=year)) +
geom_line(data=daily_22, aes(x=fake_date, y=avg_conc, group=year, color=year)) +
geom_point() +
scale_x_date(date_breaks = "10 day", date_labels = "%m/%d") +
labs(title = "Average Daily PM2.5 Concentration January to March of 2021 and 2022",
x = 'Date',
y = 'Avg. PM2.5 Conc. (ug/m3)',
color = "Year",
caption = "Time series data of daily average PM2.5
concentrations in Salt Lake County in winter of 2021 and 2022") +
theme(legend.position = "bottom", plot.title=element_text(hjust=0.5)) +
scale_color_manual(values = c("#9970de", "#37b9bf"))
ggplot_object
ggplot_object
rmarkdown::render("final_report.Rmd")
here::i_am("code/model.R")
here::i_am("code/model.R")
setwd("C:/Users/rache/OneDrive - Emory University/Documents/Fall 2022/INFO 580 Data Science Toolkit/RStudio Projects/engagement-report")
here::i_am("code/model.R")
data <- read.csv(
file = here::here("data/course_engagement.csv"), header = T
)
library(gtsummary)
library(lubridate)
library(dplyr)
library(labelled)
# convert data
data_1 <- data %>%
mutate(length = period_to_seconds(ms(length)))%>%
group_by(week)%>%
summarise(video_n = length(video_number),
topic_n = length(unique(topic)),
views = round(mean(views)),
unique_viewers = round(mean(unique_viewers, na.rm = T)),
length = round(mean(length, na.rm = T)))
var_label(data_1) <- list(video_n = "Total number of videos/week",
topic_n = "Total number of topics/week",
length = "Mean length of total video/week")
model <- glm(
views ~ length + video_n + topic_n,
data = data_1
)
regression_table <-
tbl_regression(model_1, intercept = T) %>%
add_global_p() %>%
bold_labels()
here::i_am("code/model.R")
data <- read.csv(
file = here::here("data/course_engagement.csv"), header = T
)
library(gtsummary)
library(lubridate)
library(dplyr)
library(labelled)
# convert data
data_1 <- data %>%
mutate(length = period_to_seconds(ms(length)))%>%
group_by(week)%>%
summarise(video_n = length(video_number),
topic_n = length(unique(topic)),
views = round(mean(views)),
unique_viewers = round(mean(unique_viewers, na.rm = T)),
length = round(mean(length, na.rm = T)))
var_label(data_1) <- list(video_n = "Total number of videos/week",
topic_n = "Total number of topics/week",
length = "Mean length of total video/week")
model <- glm(
views ~ length + video_n + topic_n,
data = data_1
)
regression_table <-
tbl_regression(model_1, intercept = T) %>%
add_global_p() %>%
bold_labels()
here::i_am("code/model.R")
data <- read.csv(
file = here::here("data/course_engagement.csv"), header = T
)
library(gtsummary)
library(lubridate)
library(dplyr)
library(labelled)
# convert data
data_1 <- data %>%
mutate(length = period_to_seconds(ms(length)))%>%
group_by(week)%>%
summarise(video_n = length(video_number),
topic_n = length(unique(topic)),
views = round(mean(views)),
unique_viewers = round(mean(unique_viewers, na.rm = T)),
length = round(mean(length, na.rm = T)))
var_label(data_1) <- list(video_n = "Total number of videos/week",
topic_n = "Total number of topics/week",
length = "Mean length of total video/week")
model_1 <- glm(
views ~ length + video_n + topic_n,
data = data_1
)
regression_table <-
tbl_regression(model_1, intercept = T) %>%
add_global_p() %>%
bold_labels()
saveRDS(
regression_table,
file = here::here("output/regression_table.rds")
)
knitr::opts_chunk$set(echo = TRUE)
random_numbers1 <- readRDS(
here::here("output/regression_table")
)
regression_table <- readRDS(
here::here("output/regression_table")
)
regression_table <- readRDS(
here::here("output/regression_table")
)
regression_table <- readRDS(
here::here("output/regression_table.rds")
)
regression_table <- readRDS(
here::here("output/regression_table.rds")
)
regression_table
View(data_1)
